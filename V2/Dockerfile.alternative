# Alternative Dockerfile with better network handling
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install curl for health checks and better network tools
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./

# Install dependencies with multiple retry strategies
RUN set -ex && \
    npm config set registry https://registry.npmjs.org/ && \
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-retries 5 && \
    npm config set fetch-timeout 300000 && \
    npm config set network-timeout 300000 && \
    npm ci --omit=dev --no-audit --no-fund --prefer-offline || \
    (echo "Retrying with different strategy..." && \
     npm cache clean --force && \
     npm install --omit=dev --no-audit --no-fund)

# Copy source code
COPY . .

# Build the React application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Install dumb-init and curl for proper signal handling and health checks
RUN apk add --no-cache dumb-init curl

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies with network optimization
RUN set -ex && \
    npm config set registry https://registry.npmjs.org/ && \
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-retries 5 && \
    npm config set fetch-timeout 300000 && \
    npm config set network-timeout 300000 && \
    npm ci --omit=dev --no-audit --no-fund --prefer-offline || \
    (echo "Retrying with different strategy..." && \
     npm cache clean --force && \
     npm install --omit=dev --no-audit --no-fund) && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server.js ./
COPY --from=builder /app/database ./database
COPY --from=builder /app/uploads ./uploads

# Create uploads directory if it doesn't exist
RUN mkdir -p uploads

# Change ownership to nodejs user
RUN chown -R nodejs:nodejs /app

# Switch to nodejs user
USER nodejs

# Expose port
EXPOSE 3001

# Health check with curl
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "server.js"]



